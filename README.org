yas - a (kind of) sudo replacement

(entire readme is still work in progress)
* What is this?
    yas, or 'yet another sudo', is kind of a sudo replacement, written in rust and without really any configuration options or not needed features.
    It is intended for single user systems only, as it works out of the box, with no configuration needed, but you also can't restrict a user from running stuff as root.
    yas also can't run commands as any other user, but root.
    In case you really do have a user, that shouldn't be allowed to run stuff as root, this isn't for you.

* Installation
** AUR

There is a AUR package for the git version of yas, you can install it with a AUR helper, or just git clone it manually:
Replace yas-git with yas-tui-git for a tui version.
#+BEGIN_SRC shell
git clone ssh://aur@aur.archlinux.org/yas-git.git
cd yas-git
makepkg -is
#+END_SRC

or (for yay):

#+BEGIN_SRC
yay -S yas-git
#+END_SRC

** crates.io (rusts package manager)

Get it from crates.io with rusts cargo, by running:

#+BEGIN_SRC shell
cargo install yas
#+END_SRC

NOTE: The suid bit will not be set, you will manually have to set it for yas to work:

#+BEGIN_SRC
su -c "chown root ~/.cargo/bin/yas && chmod u+s ~/.cargo/bin/yas"
#+END_SRC

** From the release page
If you get a libc error when running, you should compile it from source, this will happen espcially often with distros that are debian based.
Or you can get the release from the release page with `-musl`, note that there isn't a tui build for that, because ncurses fails to compile. You will have to compile it manually then.

1. Download a binary
2. Change the owner to root
  
#+BEGIN_SRC
chmod root yas
#+END_SRC

3. Set the suid bit

#+BEGIN_SRC
chmod u+s yas
#+END_SRC

4. Put it somewhere in your path, such as /usr/bin
** compile manually
1. Install rust (https://www.rust-lang.org/)
2. Clone the source
3. build it in release mode, either with tui or not

```
git clone https://github.com/alx365/yas.git

cargo build --release # if with tui, add the `--features "tui"` flag

strip target/release/yas
```

4. Change the owner to root

#+BEGIN_SRC
chmod root yas
#+END_SRC

5. Set the suid bit

#+BEGIN_SRC
chmod u+s yas
#+END_SRC

* Usage:
    #+BEGIN_SRC
    yas - execute commands as the root user

    usage: yas [-h/--help] [-v/--version ]<command> <arguments for the command, this can be chained infinite>
    #+END_SRC
    As one can see, there aren't really any options for yas.
    99% of the people who use sudo (or opendoas), just use it with default configuration and the default options.
    Who would also need a flag, to edit a file, if nobody ever uses that, and instead just runs `sudo <editor> <file>`

* Security
    #+BEGIN_QUOTE
    You could have a car that is very safe by just limiting its
    max speed to 20 miles an hour. But I don't want to do that, I want to have
    something that's more like a Lamborghini, so maybe I'll throw in some airbags and
    it's gonna be mostly up to the driver to protect themselves and drive it safely.
    #+END_QUOTE
    Mental Outlaw on YouTube

   Yas really doesn't try, and doesn't want to be the most secure option, but instead rather the fastest (as in no added security delay) or the *bloat free* option.
